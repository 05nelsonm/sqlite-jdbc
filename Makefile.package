RESOURCE_DIR=src/main/resources
NATIVE_DIR=$(RESOURCE_DIR)/native
RSYNC=rsync -av -e ssh --exclude=".svn"

WIN_SERVER=192.168.11.7
WIN_WORK=work/eclipse/workspace/xerial/sqlite-jdbc

MAC_SERVER=192.168.11.8
MAC_WORK=work/eclipse/workspace/xerial/sqlite-jdbc

LINUX_SERVER=sprite
LINUX_WORK=work/eclipse/xerial/sqlite-jdbc

AMD_SERVER=utgb01
AMD_WORK=work/eclipse/xerial/sqlite-jdbc

BUILD_CMD = svn update && make clean-native all

.phony: compile

all: compile

LIB_DIR=target/dll

DLL_WIN = $(LIB_DIR)/win/sqlitejdbc.dll
DLL_MAC = $(LIB_DIR)/mac/libsqlitejdbc.jnilib
DLL_LINUX = $(LIB_DIR)/linux/libsqlitejdbc.so
DLL_AMD64 = $(LIB_DIR)/amd64/libsqlitejdbc.so
DLL_PUREJAVA = $(LIB_DIR)/purejava/SQLite.class


compile: $(DLL_PUREJAVA) $(DLL_WIN) $(DLL_MAC) $(DLL_LINUX) $(DLL_AMD64)
	cp $(DLL_PUREJAVA) $(RESOURCE_DIR)/org/sqlite
	cp $(DLL_WIN) $(RESOURCE_DIR)/native/Windows/
	cp $(DLL_MAC) $(RESOURCE_DIR)/native/Mac/
	cp $(DLL_LINIX) $(RESOURCE_DIR)/native/Linux/i386/
	cp $(DLL_AMD64) $(RESOURCE_DIR)/native/Linux/amd64/

$(DLL_WIN): 
	ssh $(WIN_SERVER) "source .zprofile && cd $(WIN_WORK) && $(BUILD_CMD)"
	mkdir -p $(LIB_DIR)/win
	$(RSYNC)  $(WIN_SERVER):./$(WIN_WORK)/$(NATIVE_DIR)/Windows/ $(LIB_DIR)/win/

$(DLL_MAC):
	ssh $(MAC_SERVER) "source .zprofile && cd $(MAC_WORK) && $(BUILD_CMD)"
    mkdir -p $(LIB_DIR)/mac
	$(RSYNC)  $(MAC_SERVER):./$(MAC_WORK)/$(NATIVE_DIR)/Mac/ $(LIB_DIR)/mac/

$(DLL_PUREJAVA):
	ssh $(MAC_SERVER) "source .zprofile && cd $(MAC_WORK)/sqlitejdbc && make -f Makefile.nested"
	mkdir -p $(LIB_DIR)/purejava
	scp $(MAC_SERVER):./$(MAC_WORK)/sqlitejdbc/build/org/sqlite/SQLite.class $(LIB_DIR)/purejava/
#	mkdir -p $(RESOURCE_DIR)/org/sqlite	

$(DLL_LINUX):
	ssh $(LINUX_SERVER) "source .zprofile && source /etc/profile.d/java.sh && cd $(LINUX_WORK) && $(BUILD_CMD)"
	mkdir -p $(LIB_DIR)/linux
	$(RSYNC)  $(LINUX_SERVER):./$(LINUX_WORK)/$(NATIVE_DIR)/Linux/i386/ $(LIB_DIR)/linux/

$(DLL_AMD64):
	ssh $(AMD_SERVER) "source .zprofile && cd $(AMD_WORK) && $(BUILD_CMD)"
	mkdir -p $(LIB_DIR)/amd64
	$(RSYNC)  $(AMD_SERVER):./$(AMD_WORK)/$(NATIVE_DIR)/Linux/amd64/ $(LIB_DIR)/amd64



